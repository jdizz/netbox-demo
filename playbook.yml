---
######################################################################
# Precheck Playbook (All tasks)
# 1) Installs Python3 on all nodes
# 2) Installs Ansible on the nagios (i.e. managment) node
# 3) Updates/upgrades apt and restarts all nodes 
######################################################################

# Install Python
- name: Install Python3
  hosts: local
  gather_facts: false
  become: yes
  tasks:
    - name: Check if python is installed
      raw: test -e /usr/bin/python3
      register: python_installed
      changed_when: false
      failed_when: false

    - name: Install python3
      raw: (sudo apt-get -y update && apt-get install -y python3)
      when: python_installed.rc != 0
  any_errors_fatal: true
  max_fail_percentage: 0

# Install Ansible
- name: Add Ansible repository on nagios node
  hosts: local
  gather_facts: false
  become: yes
  tasks:
    - name: Add Ansible repository
      apt_repository:
          repo: ppa:ansible/ansible
          state: present
    
    - name: Install Ansible
      apt:
        name: ansible
        state: present

# Install PostgresSQL
- name: Install PostgresSQL
  hosts: local
  become: yes
  tasks:
    - name: 
      apt:
        repo: postgressql
        state: present

# Install libpq-dev
- name: Install libpq-dev
  hosts: local
  become: yes
  tasks:
    - name: 
      apt:
        repo: libpq-dev
        state: present

# Update and upgrade apt + restart
- hosts: local
  gather_facts: false
  become: yes
  tasks:
  # Update, upgrade, and ignore apt dialogs
  - name: Update apt cache
    apt:
      update_cache: yes

  - name: Upgrade all packages to the latest version
    apt:
      name: "*"
      state: latest
      force_apt_get: yes
  
  - name: Check the uptime prior reboot
    shell: uptime
    register: UPTIME_PRE_REBOOT

  - debug: msg={{UPTIME_PRE_REBOOT.stdout}}

  - name: Reboot system if required
    command: shutdown -r now 'Rebooting to complete system upgrade'
              removes=/var/run/reboot-required

  # Wait for reboot to complete
  - name: wait for host to finish reboot
    wait_for:
      port: "{{ (ansible_port|default(ansible_ssh_port))|default(22) }}"
      host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
      search_regex: OpenSSH
      delay: 10  # Do not check for at least 10 sec
    connection: local

  - name: Check the uptime post reboot
    shell: uptime
    register: UPTIME_POST_REBOOT

  - debug: msg={{UPTIME_POST_REBOOT.stdout}}

# Create PostgresSQL DB "netbox", user "netbox", and role "netbox"
# https://docs.ansible.com/ansible/latest/modules/postgresql_db_module.html
- name: Create Postgres SQL DB "netbox"
  postgressql_db:
    name: netbox
    login_user: netbox
    login_password: netbox
    owner: netbox